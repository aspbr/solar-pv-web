[{"/Users/ashishbaraskar/solar-pv-web/src/index.tsx":"1","/Users/ashishbaraskar/solar-pv-web/src/reportWebVitals.ts":"2","/Users/ashishbaraskar/solar-pv-web/src/App.tsx":"3","/Users/ashishbaraskar/solar-pv-web/src/components/Header/Header.tsx":"4","/Users/ashishbaraskar/solar-pv-web/src/components/Footer/Footer.tsx":"5","/Users/ashishbaraskar/solar-pv-web/src/components/Main/Main.tsx":"6","/Users/ashishbaraskar/solar-pv-web/src/components/Login/Login.tsx":"7","/Users/ashishbaraskar/solar-pv-web/src/components/Registration/Registration.tsx":"8","/Users/ashishbaraskar/solar-pv-web/src/store/index.ts":"9","/Users/ashishbaraskar/solar-pv-web/src/components/Views/Views.tsx":"10","/Users/ashishbaraskar/solar-pv-web/src/components/Views/FeatureContent/FeatureContent.jsx":"11","/Users/ashishbaraskar/solar-pv-web/src/components/Views/FeatureTabs/FeatureTabs.jsx":"12","/Users/ashishbaraskar/solar-pv-web/src/components/MainContent/MainContent.tsx":"13","/Users/ashishbaraskar/solar-pv-web/src/components/RightNav/RightNav.jsx":"14","/Users/ashishbaraskar/solar-pv-web/src/components/LeftNav/LeftNav.jsx":"15","/Users/ashishbaraskar/solar-pv-web/src/components/RegistrationForm/RegistrationForm.js":"16","/Users/ashishbaraskar/solar-pv-web/src/components/Contact/Contact.tsx":"17","/Users/ashishbaraskar/solar-pv-web/src/components/LoginForm/LoginForm.tsx":"18","/Users/ashishbaraskar/solar-pv-web/src/components/Gallery/Gallery.tsx":"19","/Users/ashishbaraskar/solar-pv-web/src/components/ImageContent/ImageContent.tsx":"20","/Users/ashishbaraskar/solar-pv-web/src/components/LeftArrow/LeftArrow.tsx":"21","/Users/ashishbaraskar/solar-pv-web/src/components/RightArrow/RightArrow.jsx":"22","/Users/ashishbaraskar/solar-pv-web/src/components/AboutUs/AboutUs.jsx":"23","/Users/ashishbaraskar/solar-pv-web/src/components/ContactUs/ContactUs.jsx":"24","/Users/ashishbaraskar/solar-pv-web/src/components/Logo/Logo.tsx":"25","/Users/ashishbaraskar/solar-pv-web/src/components/GallerySorter/GallerySorter.js":"26","/Users/ashishbaraskar/solar-pv-web/src/components/ImageCard/ImageCard.tsx":"27","/Users/ashishbaraskar/solar-pv-web/src/components/Donation/Donation.tsx":"28","/Users/ashishbaraskar/solar-pv-web/src/components/Scholership/Scholership.js":"29","/Users/ashishbaraskar/solar-pv-web/src/components/Dashboard/Dashboard.tsx":"30","/Users/ashishbaraskar/solar-pv-web/src/components/ClientForm/ClientForm.tsx":"31","/Users/ashishbaraskar/solar-pv-web/src/components/ProductForm/ProductForm.tsx":"32","/Users/ashishbaraskar/solar-pv-web/src/components/LocationForm/LocationForm.tsx":"33","/Users/ashishbaraskar/solar-pv-web/src/components/CertificateForm/CertificateForm.tsx":"34","/Users/ashishbaraskar/solar-pv-web/src/components/TestStandardForm/TestStandardForm.tsx":"35","/Users/ashishbaraskar/solar-pv-web/src/store/certificates/reducer.tsx":"36","/Users/ashishbaraskar/solar-pv-web/src/store/certificates/constants.tsx":"37"},{"size":612,"mtime":1611020938770,"results":"38","hashOfConfig":"39"},{"size":425,"mtime":499162500000,"results":"40","hashOfConfig":"39"},{"size":2381,"mtime":1617059988325,"results":"41","hashOfConfig":"39"},{"size":360,"mtime":1611270698594,"results":"42","hashOfConfig":"39"},{"size":1194,"mtime":1611263946083,"results":"43","hashOfConfig":"39"},{"size":329,"mtime":1618867531247,"results":"44","hashOfConfig":"39"},{"size":448,"mtime":1611172897986,"results":"45","hashOfConfig":"39"},{"size":455,"mtime":1611079245616,"results":"46","hashOfConfig":"39"},{"size":446,"mtime":1618858844028,"results":"47","hashOfConfig":"39"},{"size":635,"mtime":1618867590580,"results":"48","hashOfConfig":"39"},{"size":471,"mtime":1611028908271,"results":"49","hashOfConfig":"39"},{"size":751,"mtime":1610941635931,"results":"50","hashOfConfig":"39"},{"size":404,"mtime":1611173352411,"results":"51","hashOfConfig":"39"},{"size":1886,"mtime":1615085960945,"results":"52","hashOfConfig":"39"},{"size":909,"mtime":1611032025651,"results":"53","hashOfConfig":"39"},{"size":11378,"mtime":1614118586584,"results":"54","hashOfConfig":"39"},{"size":1245,"mtime":1611270709991,"results":"55","hashOfConfig":"39"},{"size":2917,"mtime":1618868077782,"results":"56","hashOfConfig":"39"},{"size":468,"mtime":1611241008825,"results":"57","hashOfConfig":"39"},{"size":216,"mtime":1611179125761,"results":"58","hashOfConfig":"39"},{"size":210,"mtime":1611179120781,"results":"59","hashOfConfig":"39"},{"size":212,"mtime":1611179140560,"results":"60","hashOfConfig":"39"},{"size":2167,"mtime":1611274289182,"results":"61","hashOfConfig":"39"},{"size":210,"mtime":1611179682524,"results":"62","hashOfConfig":"39"},{"size":955,"mtime":1611274723170,"results":"63","hashOfConfig":"39"},{"size":5267,"mtime":1611274820174,"results":"64","hashOfConfig":"39"},{"size":453,"mtime":1611245038210,"results":"65","hashOfConfig":"39"},{"size":10811,"mtime":1611929984524,"results":"66","hashOfConfig":"39"},{"size":54221,"mtime":1611883098226,"results":"67","hashOfConfig":"39"},{"size":744,"mtime":1617060962937,"results":"68","hashOfConfig":"39"},{"size":3445,"mtime":1616899860689,"results":"69","hashOfConfig":"39"},{"size":9991,"mtime":1617061112320,"results":"70","hashOfConfig":"39"},{"size":9345,"mtime":1616972703524,"results":"71","hashOfConfig":"39"},{"size":5370,"mtime":1617061096843,"results":"72","hashOfConfig":"39"},{"size":3434,"mtime":1617061123418,"results":"73","hashOfConfig":"39"},{"size":417,"mtime":1618865833001,"results":"74","hashOfConfig":"39"},{"size":54,"mtime":1618860863245,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1si2dic",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"100"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"100"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"78"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"/Users/ashishbaraskar/solar-pv-web/src/index.tsx",[],["158","159"],"/Users/ashishbaraskar/solar-pv-web/src/reportWebVitals.ts",[],"/Users/ashishbaraskar/solar-pv-web/src/App.tsx",[],"/Users/ashishbaraskar/solar-pv-web/src/components/Header/Header.tsx",[],"/Users/ashishbaraskar/solar-pv-web/src/components/Footer/Footer.tsx",[],"/Users/ashishbaraskar/solar-pv-web/src/components/Main/Main.tsx",["160"],"/Users/ashishbaraskar/solar-pv-web/src/components/Login/Login.tsx",[],"/Users/ashishbaraskar/solar-pv-web/src/components/Registration/Registration.tsx",["161","162","163"],"import { makeStyles, Paper } from '@material-ui/core';\nimport React, { Component} from 'react';\nimport RegistrationForm from '../RegistrationForm/RegistrationForm';\nimport './Registration.css'\n\n\n\nexport default function Registration(props: any) {\n\n\n    return (\n        <div className=\"reg-cont\">\n            <div className=\"reg-header\"><span className=\"reg-header-title\">Join Us</span></div>\n                <RegistrationForm />\n        </div>\n    );\n}\n\n","/Users/ashishbaraskar/solar-pv-web/src/store/index.ts",[],"/Users/ashishbaraskar/solar-pv-web/src/components/Views/Views.tsx",[],"/Users/ashishbaraskar/solar-pv-web/src/components/Views/FeatureContent/FeatureContent.jsx",[],["164","165"],"/Users/ashishbaraskar/solar-pv-web/src/components/Views/FeatureTabs/FeatureTabs.jsx",[],"/Users/ashishbaraskar/solar-pv-web/src/components/MainContent/MainContent.tsx",[],"/Users/ashishbaraskar/solar-pv-web/src/components/RightNav/RightNav.jsx",[],"/Users/ashishbaraskar/solar-pv-web/src/components/LeftNav/LeftNav.jsx",[],"/Users/ashishbaraskar/solar-pv-web/src/components/RegistrationForm/RegistrationForm.js",[],"/Users/ashishbaraskar/solar-pv-web/src/components/Contact/Contact.tsx",[],"/Users/ashishbaraskar/solar-pv-web/src/components/LoginForm/LoginForm.tsx",[],"/Users/ashishbaraskar/solar-pv-web/src/components/Gallery/Gallery.tsx",[],"/Users/ashishbaraskar/solar-pv-web/src/components/ImageContent/ImageContent.tsx",[],["166","167"],"/Users/ashishbaraskar/solar-pv-web/src/components/LeftArrow/LeftArrow.tsx",[],"/Users/ashishbaraskar/solar-pv-web/src/components/RightArrow/RightArrow.jsx",[],["168","169"],"/Users/ashishbaraskar/solar-pv-web/src/components/AboutUs/AboutUs.jsx",[],"/Users/ashishbaraskar/solar-pv-web/src/components/ContactUs/ContactUs.jsx",[],"/Users/ashishbaraskar/solar-pv-web/src/components/Logo/Logo.tsx",[],"/Users/ashishbaraskar/solar-pv-web/src/components/GallerySorter/GallerySorter.js",["170"],"import React from 'react';\nimport './GallerySorter.css'\nimport image1 from '../../images/gallery/1.jpg'\nimport image2 from '../../images/gallery/2.jpg'\nimport image3 from '../../images/gallery/3.jpg'\nimport image4 from '../../images/gallery/4.jpg'\nimport image5 from '../../images/gallery/5.jpg'\nimport image6 from '../../images/gallery/6.jpg'\nimport image7 from '../../images/gallery/7.jpg'\nimport image8 from '../../images/gallery/8.jpg'\nimport image9 from '../../images/gallery/9.jpg'\nimport image10 from '../../images/gallery/10.jpg'\n\nimport ImageCard from '../ImageCard/ImageCard'\nimport { createStyles, FormControl, InputLabel, makeStyles, Select, Theme } from '@material-ui/core';\n\nexport default function GallerySorter() {\n\n    const imageList = [\n        {\n            name: image1,\n            event: 'Event 1',\n            date: '11-10-1990'\n        },\n        {\n            name: image2,\n            event: 'Event 1',\n            date: '10-10-1990'\n        },\n        {\n            name: image3,\n            event: 'Event 2',\n            date: '10-10-1990'\n        },\n        {\n            name: image4,\n            event: 'Event 3',\n            date: '10-10-1990'\n        },\n        {\n          name: image5,\n          event: 'Event 3',\n          date: '10-10-1990'\n        },\n        {\n          name: image6,\n          event: 'Event 1',\n          date: '10-10-1990'\n        },\n        {\n          name: image7,\n          event: 'Event 3',\n          date: '10-10-1990'\n        },\n        {\n          name: image8,\n          event: 'Event 4',\n          date: '10-10-1992'\n        },\n        {\n          name: image9,\n          event: 'Event 4',\n          date: '10-10-1992'\n        },\n        {\n          name: image10,\n          event: 'Event 4',\n          date: '10-10-1992'\n        }\n    ]\n\n\n    const [type, setType] = React.useState('event');\n\n    const listOfEvents = imageList.map(imageObj => imageObj.event).filter((value, index, self) => self.indexOf(value) === index)\n    const listOfDates = imageList.map(imageObj => imageObj.date).filter((value, index, self) => self.indexOf(value) === index)\n\n\n    const sortedByEventImages = () => {\n      let obj = {}\n      \n      listOfEvents.forEach(eventName => \n        \n        imageList.forEach(imageObj => {\n          if(eventName === imageObj.event) {\n            if(!obj[eventName]){\n              obj[eventName] = []\n            }\n            obj[eventName].push(imageObj)\n\n          }\n        })\n        )\n      return obj\n    }\n\n    const sortedByDateImages = () => {\n      let obj = {}\n      \n      listOfDates.forEach(eventDate => \n        \n        imageList.forEach(imageObj => {\n          if(eventDate === imageObj.date) {\n            if(!obj[eventDate]){\n              obj[eventDate] = []\n            }\n            obj[eventDate].push(imageObj)\n\n          }\n        })\n        )\n      return obj\n    }\n\n    const groupByEvent = listOfEvents.map(eventName => {\n      let obj = sortedByEventImages()\n      return <div >\n              <div className=\"group-title-div\">\n                  <span className=\"group-title\"> \n                      Event Name: {eventName}\n                  </span>\n              </div>\n\n                {obj[eventName].map(imageObj => (<ImageCard path={imageObj.name}></ImageCard>))} \n              </div>\n      \n     } )\n\n     const groupByDate = listOfDates.map(eventDate => {\n      let obj = sortedByDateImages()\n      return <div>\n                <div className=\"group-title-div\">\n                  <span className=\"group-title\"> \n                    Event Date: {eventDate} \n                  </span>\n                </div>\n                {obj[eventDate].map(imageObj => (<ImageCard path={imageObj.name}></ImageCard>))} \n              </div>\n     } )\n\n/*     const handleChange = (event) => {\n      setType(event.target.value);\n    }; */\n\n    const handleChange = (event) => {\n      setType(event.target.value);\n    };\n\n    const useStyles = makeStyles((theme) =>\n  createStyles({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }),\n);\n\nconst classes = useStyles();\n\n        return (\n            <div>\n              \n              <div className=\"sort-by-div\">\n              <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel htmlFor=\"outlined-type-native-simple\">Group By</InputLabel>\n                <Select\n                  native\n                  value={type}\n                  onChange={handleChange}\n                  label=\"Sort By\"\n                  inputProps={{\n                    name: 'type',\n                    id: 'outlined-type-native-simple',\n                  }}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  <option value=\"event\">Event Name</option>\n                  <option value=\"date\">Event Date</option>\n                </Select>\n              </FormControl>\n              </div>\n            <div className=\"gallery-content\">\n              {type === \"event\" ? \n                <div>{groupByEvent}</div> \n                : \n                <div>{groupByDate}</div>}\n            </div>\n            <br/>\n         \n            </div>\n        );\n\n}\n\n\n\n\n\n\n","/Users/ashishbaraskar/solar-pv-web/src/components/ImageCard/ImageCard.tsx",[],"/Users/ashishbaraskar/solar-pv-web/src/components/Donation/Donation.tsx",[],"/Users/ashishbaraskar/solar-pv-web/src/components/Scholership/Scholership.js",["171"],"import { FormControl, FormControlLabel, FormLabel, Grid, InputLabel, MenuItem, Radio, RadioGroup, Select, TextField, makeStyles, Input } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport './Scholership.css'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst initialValues = {\n    username: '',\n    password: '', //(required, must be at most 8 characters long comprising at least a digit, a lowercase letter, and an uppercase letter) \n    firstName: '',\n    middleName: '',\n    lastName: '',\n    gender: 'male',\n    streetAddress: '',\n    city: '',\n    state: '',\n    zipCode: '',\n    email: '',\n    cellNumber: '',\n    dob: new Date(),\n    placeOfBirth: '',\n    numOfChildren: '',\n    terminated: 'no',\n    terminationExplaination: '',\n    fatherFirstAndLastNames: '',\n    fAge: ''\n}\n\n\nconst useStyle = makeStyles(theme => ({\n    root: {\n        '& .MuiTextField-root, & .MuiFormGroup-root, & .MuiFormLabel-root, & .MuiInputBase-root, & .MuiFormControl-root': {\n            width: '90%',\n            margin: theme.spacing(1)\n        }\n    },\n    button: {\n        backgroundColor: 'green',\n        color: 'white',\n        fontWeight: 'bold'\n    },\n    table: {\n        '& .MuiTextField-root, & .MuiFormGroup-root, & .MuiFormLabel-root, & .MuiInputBase-root, & .MuiFormControl-root': {\n            width: '100%',\n            minWidth: '70px',\n            margin: 0\n        }\n\n    },\n\n}))\nexport default function Scholership(props) {\n\n\n    const [values, setValues] = useState(initialValues)\n    const [errors, setErrors] = useState({})\n\n    const classes = useStyle()\n\n    const validate = () => {\n        let temp = {}\n        temp.username = values.username ? \"\" : \"Username is required\"\n        temp.password = (/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{5,8}$/).test(values.password) ? \"\" : \"Must be at most 8 characters long comprising at least a digit, a lowercase letter, and an uppercase letter\"\n        temp.email = (/$\\.+@.+..+/).test(values.email) ? \"\" : \"Incorrect email format\"\n        temp.cellNumber = values.cellNumber.length > 9 ? \"\" : \"Minimun 10 numbers required\"\n        setErrors({\n            ...temp\n        })\n\n        return Object.values(temp).every(val => val === \"\")\n    }\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        setValues({\n            ...values,\n            [name]: value\n        })\n    }\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        if (validate()) {\n            alert('Form is valid')\n        }\n\n    }\n\n    function createData(year, school, city, country, classTaken, grade, rank, degree) {\n        return { year, school, city, country, classTaken, grade, rank, degree };\n    }\n\n    function createHollowYearData(hYear, activities) {\n        return { hYear, activities };\n    }\n    const hYears = [\n        createHollowYearData(\n            <TextField\n                variant=\"filled\"\n                label=\"Hollow Year\"\n                name=\"year1\"\n                value={values.year1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"Activities\"\n                name=\"year1\"\n                value={values.year1}\n                onChange={handleInputChange}\n            />\n        ),\n        createHollowYearData(\n            <TextField\n                variant=\"filled\"\n                label=\"Hollow Year\"\n                name=\"year1\"\n                value={values.year1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"Activities\"\n                name=\"year1\"\n                value={values.year1}\n                onChange={handleInputChange}\n            />\n        )\n    ]\n    const rows = [\n        createData(\n            <TextField\n                variant=\"filled\"\n                label=\"Year\"\n                name=\"year1\"\n                value={values.year1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"School\"\n                name=\"school1\"\n                value={values.school1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"City\"\n                name=\"city1\"\n                value={values.city1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"Country\"\n                name=\"country1\"\n                value={values.country1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"Class\"\n                name=\"class1\"\n                value={values.class1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"Grade\"\n                name=\"grade1\"\n                value={values.grade1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"Rank\"\n                name=\"rank1\"\n                value={values.rank1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"Degree\"\n                name=\"degree1\"\n                value={values.degree1}\n                onChange={handleInputChange}\n            />\n        ),\n\n        createData(\n            <TextField\n                variant=\"filled\"\n                label=\"Year\"\n                name=\"year1\"\n                value={values.year1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"School\"\n                name=\"school1\"\n                value={values.school1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"City\"\n                name=\"city1\"\n                value={values.city1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"Country\"\n                name=\"country1\"\n                value={values.country1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"Class\"\n                name=\"class1\"\n                value={values.class1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"Grade\"\n                name=\"grade1\"\n                value={values.grade1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"Rank\"\n                name=\"rank1\"\n                value={values.rank1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"Degree\"\n                name=\"degree1\"\n                value={values.degree1}\n                onChange={handleInputChange}\n            />\n        ),\n\n        createData(\n            <TextField\n                variant=\"filled\"\n                label=\"Year\"\n                name=\"year1\"\n                value={values.year1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"School\"\n                name=\"school1\"\n                value={values.school1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"City\"\n                name=\"city1\"\n                value={values.city1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"Country\"\n                name=\"country1\"\n                value={values.country1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"Class\"\n                name=\"class1\"\n                value={values.class1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"Grade\"\n                name=\"grade1\"\n                value={values.grade1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"Rank\"\n                name=\"rank1\"\n                value={values.rank1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"Degree\"\n                name=\"degree1\"\n                value={values.degree1}\n                onChange={handleInputChange}\n            />\n        ),\n\n        createData(\n            <TextField\n                variant=\"filled\"\n                label=\"Year\"\n                name=\"year1\"\n                value={values.year1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"School\"\n                name=\"school1\"\n                value={values.school1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"City\"\n                name=\"city1\"\n                value={values.city1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"Country\"\n                name=\"country1\"\n                value={values.country1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"Class\"\n                name=\"class1\"\n                value={values.class1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"Grade\"\n                name=\"grade1\"\n                value={values.grade1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"Rank\"\n                name=\"rank1\"\n                value={values.rank1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"Degree\"\n                name=\"degree1\"\n                value={values.degree1}\n                onChange={handleInputChange}\n            />\n        ),\n\n\n        createData(\n            <TextField\n                variant=\"filled\"\n                label=\"Year\"\n                name=\"year1\"\n                value={values.year1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"School\"\n                name=\"school1\"\n                value={values.school1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"City\"\n                name=\"city1\"\n                value={values.city1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"Country\"\n                name=\"country1\"\n                value={values.country1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"Class\"\n                name=\"class1\"\n                value={values.class1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"Grade\"\n                name=\"grade1\"\n                value={values.grade1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"Rank\"\n                name=\"rank1\"\n                value={values.rank1}\n                onChange={handleInputChange}\n            />,\n            <TextField\n                variant=\"filled\"\n                label=\"Degree\"\n                name=\"degree1\"\n                value={values.degree1}\n                onChange={handleInputChange}\n            />\n        ),\n    ];\n\n    return (\n        <div className=\"sch-div\">\n            <div className=\"reg-header\"><span className=\"reg-header-title\">Scholership Form</span></div>\n            <div className=\"reg-form sch-form\">\n\n                <form className={classes.root} onSubmit={handleSubmit}>\n                    <Grid container>\n                        <Grid>\n                            <TextField\n                                variant=\"outlined\"\n                                label=\"User Id\"\n                                value={values.username}\n                                name=\"username\"\n                                onChange={handleInputChange}\n                                inputProps={{ maxLength: 8 }}\n                                helperText={errors.username}\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                label=\"First Name\"\n                                name=\"firstName\"\n                                value={values.firstName}\n                                onChange={handleInputChange}\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                label=\"Middle Name\"\n                                name=\"middleName\"\n                                value={values.middleName}\n                                onChange={handleInputChange}\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                label=\"Last Name\"\n                                name=\"lastName\"\n                                value={values.lastName}\n                                onChange={handleInputChange}\n                            />\n                            <FormControl>\n                                <FormLabel component=\"legend\">Gender</FormLabel>\n                                <RadioGroup row name=\"gender\" value={values.gender} onChange={handleInputChange}>\n                                    <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n                                    <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n                                    <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\n                                </RadioGroup>\n                            </FormControl>\n                            <TextField\n                                variant=\"outlined\"\n                                label=\"Street Address\"\n                                name=\"streetAddress\"\n                                value={values.streetAddress}\n                                onChange={handleInputChange}\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                label=\"City\"\n                                name=\"city\"\n                                value={values.city}\n                                onChange={handleInputChange}\n                            />\n\n                            <FormControl variant=\"outlined\">\n                                <InputLabel>State</InputLabel>\n                                <Select\n                                    label=\"State\"\n                                    variant=\"outlined\"\n                                    name=\"state\"\n                                    value={values.state}\n                                    onChange={handleInputChange}\n                                >\n                                    <MenuItem value=\"AL\">Alabama</MenuItem>\n                                    <MenuItem value=\"AK\">Alaska</MenuItem>\n                                    <MenuItem value=\"AZ\">Arizona</MenuItem>\n                                    <MenuItem value=\"AR\">Arkansas</MenuItem>\n                                    <MenuItem value=\"CA\">California</MenuItem>\n                                    <MenuItem value=\"CO\">Colorado</MenuItem>\n                                    <MenuItem value=\"CT\">Connecticut</MenuItem>\n                                    <MenuItem value=\"DE\">Delaware</MenuItem>\n                                    <MenuItem value=\"DC\">District Of Columbia</MenuItem>\n                                    <MenuItem value=\"FL\">Florida</MenuItem>\n                                    <MenuItem value=\"GA\">Georgia</MenuItem>\n                                    <MenuItem value=\"HI\">Hawaii</MenuItem>\n                                    <MenuItem value=\"ID\">Idaho</MenuItem>\n                                    <MenuItem value=\"IL\">Illinois</MenuItem>\n                                    <MenuItem value=\"IN\">Indiana</MenuItem>\n                                    <MenuItem value=\"IA\">Iowa</MenuItem>\n                                    <MenuItem value=\"KS\">Kansas</MenuItem>\n                                    <MenuItem value=\"KY\">Kentucky</MenuItem>\n                                    <MenuItem value=\"LA\">Louisiana</MenuItem>\n                                    <MenuItem value=\"ME\">Maine</MenuItem>\n                                    <MenuItem value=\"MD\">Maryland</MenuItem>\n                                    <MenuItem value=\"MA\">Massachusetts</MenuItem>\n                                    <MenuItem value=\"MI\">Michigan</MenuItem>\n                                    <MenuItem value=\"MN\">Minnesota</MenuItem>\n                                    <MenuItem value=\"MS\">Mississippi</MenuItem>\n                                    <MenuItem value=\"MO\">Missouri</MenuItem>\n                                    <MenuItem value=\"MT\">Montana</MenuItem>\n                                    <MenuItem value=\"NE\">Nebraska</MenuItem>\n                                    <MenuItem value=\"NV\">Nevada</MenuItem>\n                                    <MenuItem value=\"NH\">New Hampshire</MenuItem>\n                                    <MenuItem value=\"NJ\">New Jersey</MenuItem>\n                                    <MenuItem value=\"NM\">New Mexico</MenuItem>\n                                    <MenuItem value=\"NY\">New York</MenuItem>\n                                    <MenuItem value=\"NC\">North Carolina</MenuItem>\n                                    <MenuItem value=\"ND\">North Dakota</MenuItem>\n                                    <MenuItem value=\"OH\">Ohio</MenuItem>\n                                    <MenuItem value=\"OK\">Oklahoma</MenuItem>\n                                    <MenuItem value=\"OR\">Oregon</MenuItem>\n                                    <MenuItem value=\"PA\">Pennsylvania</MenuItem>\n                                    <MenuItem value=\"RI\">Rhode Island</MenuItem>\n                                    <MenuItem value=\"SC\">South Carolina</MenuItem>\n                                    <MenuItem value=\"SD\">South Dakota</MenuItem>\n                                    <MenuItem value=\"TN\">Tennessee</MenuItem>\n                                    <MenuItem value=\"TX\">Texas</MenuItem>\n                                    <MenuItem value=\"UT\">Utah</MenuItem>\n                                    <MenuItem value=\"VT\">Vermont</MenuItem>\n                                    <MenuItem value=\"VA\">Virginia</MenuItem>\n                                    <MenuItem value=\"WA\">Washington</MenuItem>\n                                    <MenuItem value=\"WV\">West Virginia</MenuItem>\n                                    <MenuItem value=\"WI\">Wisconsin</MenuItem>\n                                    <MenuItem value=\"WY\">Wyoming</MenuItem>\n                                </Select>\n                            </FormControl>\n\n                            <TextField\n                                variant=\"outlined\"\n                                label=\"Zip Code\"\n                                name=\"zipCode\"\n                                value={values.zipCode}\n                                onChange={handleInputChange}\n                            />\n\n                            <TextField\n                                variant=\"outlined\"\n                                label=\"Email\"\n                                name=\"email\"\n                                value={values.email}\n                                onChange={handleInputChange}\n                                helperText={errors.email}\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                label=\"Phone\"\n                                name=\"cellNumber\"\n                                value={values.cellNumber}\n                                onChange={handleInputChange}\n                                helperText={errors.cellNumber}\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                id=\"date\"\n                                label=\"Birthday\"\n                                type=\"date\"\n                                name=\"dob\"\n                                value={values.dob}\n                                className={classes.textField}\n                                onChange={handleInputChange}\n                                helperText={errors.dob}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n\n                            <TextField\n                                variant=\"outlined\"\n                                label=\"Place of birth (City/Country)\"\n                                name=\"placeOfBirth\"\n                                value={values.placeOfBirth}\n                                onChange={handleInputChange}\n                                helperText={errors.placeOfBirth}\n                            />\n\n                            <FormControl>\n                                <FormLabel component=\"legend\">Marital Status</FormLabel>\n                                <RadioGroup row name=\"gender\" value={values.mStatus} onChange={handleInputChange}>\n                                    <FormControlLabel value=\"neverMarried\" control={<Radio />} label=\"Never Married\" />\n                                    <FormControlLabel value=\"married\" control={<Radio />} label=\"Married\" />\n                                    <FormControlLabel value=\"separated\" control={<Radio />} label=\"Separated\" />\n                                    <FormControlLabel value=\"divorced\" control={<Radio />} label=\"Divorced\" />\n                                    <FormControlLabel value=\"widow\" control={<Radio />} label=\"Widow\" />\n                                </RadioGroup>\n                            </FormControl>\n\n                            <TextField\n                                variant=\"outlined\"\n                                label=\"Number of children\"\n                                name=\"numOfChildren\"\n                                value={values.numOfChildren}\n                                onChange={handleInputChange}\n                                helperText={errors.numOfChildren}\n                            />\n\n                            <FormControl>\n                                <FormLabel component=\"legend\">Elementry and Primary Schools</FormLabel>\n\n                                <TableContainer component={Paper}>\n                                    <Table className={classes.table} aria-label=\"simple table\">\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell>Year</TableCell>\n                                                <TableCell>School</TableCell>\n                                                <TableCell>City</TableCell>\n                                                <TableCell>Country</TableCell>\n                                                <TableCell>Class</TableCell>\n                                                <TableCell>Grade</TableCell>\n                                                <TableCell>Rank</TableCell>\n                                                <TableCell>Degree</TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {rows.map((row) => (\n                                                <TableRow key={row.year}>\n                                                    <TableCell component=\"th\" scope=\"row\">\n                                                        {row.year}\n                                                    </TableCell>\n                                                    <TableCell>{row.school}</TableCell>\n                                                    <TableCell>{row.city}</TableCell>\n                                                    <TableCell>{row.country}</TableCell>\n                                                    <TableCell>{row.classTaken}</TableCell>\n                                                    <TableCell>{row.grade}</TableCell>\n                                                    <TableCell>{row.rank}</TableCell>\n                                                    <TableCell>{row.degree}</TableCell>\n                                                </TableRow>\n                                            ))}\n                                        </TableBody>\n                                    </Table>\n                                </TableContainer>\n                            </FormControl>\n\n\n\n                            <FormControl>\n                                <FormLabel component=\"legend\">Elementry and Primary Schools</FormLabel>\n\n                                <TableContainer component={Paper}>\n                                    <Table className={classes.table} aria-label=\"simple table\">\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell>Year</TableCell>\n                                                <TableCell>School</TableCell>\n                                                <TableCell>City</TableCell>\n                                                <TableCell>Country</TableCell>\n                                                <TableCell>Class</TableCell>\n                                                <TableCell>Grade</TableCell>\n                                                <TableCell>Rank</TableCell>\n                                                <TableCell>Degree</TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {rows.map((row) => (\n                                                <TableRow key={row.year}>\n                                                    <TableCell component=\"th\" scope=\"row\">\n                                                        {row.year}\n                                                    </TableCell>\n                                                    <TableCell>{row.school}</TableCell>\n                                                    <TableCell>{row.city}</TableCell>\n                                                    <TableCell>{row.country}</TableCell>\n                                                    <TableCell>{row.classTaken}</TableCell>\n                                                    <TableCell>{row.grade}</TableCell>\n                                                    <TableCell>{row.rank}</TableCell>\n                                                    <TableCell>{row.degree}</TableCell>\n                                                </TableRow>\n                                            ))}\n                                        </TableBody>\n                                    </Table>\n                                </TableContainer>\n                            </FormControl>\n\n\n                            <FormControl>\n                                <FormLabel component=\"legend\">University</FormLabel>\n\n                                <TableContainer component={Paper}>\n                                    <Table className={classes.table} aria-label=\"simple table\">\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell>Year</TableCell>\n                                                <TableCell>School</TableCell>\n                                                <TableCell>City</TableCell>\n                                                <TableCell>Country</TableCell>\n                                                <TableCell>Class</TableCell>\n                                                <TableCell>Grade</TableCell>\n                                                <TableCell>Rank</TableCell>\n                                                <TableCell>Degree</TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {rows.map((row) => (\n                                                <TableRow key={row.year}>\n                                                    <TableCell component=\"th\" scope=\"row\">\n                                                        {row.year}\n                                                    </TableCell>\n                                                    <TableCell>{row.school}</TableCell>\n                                                    <TableCell>{row.city}</TableCell>\n                                                    <TableCell>{row.country}</TableCell>\n                                                    <TableCell>{row.classTaken}</TableCell>\n                                                    <TableCell>{row.grade}</TableCell>\n                                                    <TableCell>{row.rank}</TableCell>\n                                                    <TableCell>{row.degree}</TableCell>\n                                                </TableRow>\n                                            ))}\n                                        </TableBody>\n                                    </Table>\n                                </TableContainer>\n                            </FormControl>\n\n                            <FormControl>\n                                <FormLabel component=\"legend\">List your whereabouts during the hollow year</FormLabel>\n\n                                <TableContainer component={Paper}>\n                                    <Table className={classes.table} aria-label=\"simple table\">\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell>Hollow Year</TableCell>\n                                                <TableCell>Activities</TableCell>\n\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {hYears.map((row) => (\n                                                <TableRow key={row.hYear}>\n                                                    <TableCell component=\"th\" scope=\"row\">\n                                                        {row.hYear}\n                                                    </TableCell>\n                                                    <TableCell>{row.activities}</TableCell>\n                                                </TableRow>\n                                            ))}\n                                        </TableBody>\n                                    </Table>\n                                </TableContainer>\n                            </FormControl>\n\n                            <FormControl>\n                                <FormLabel component=\"legend\">Have you ever been terminated from a school?</FormLabel>\n                                <RadioGroup row name=\"terminated\" value={values.terminated} onChange={handleInputChange}>\n                                    <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\n                                    <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\n                                </RadioGroup>\n                            </FormControl>\n\n                            <TextField\n                                variant=\"filled\"\n                                label=\"If Yes, Explain\"\n                                name=\"terminationExplaination\"\n                                value={values.terminationExplaination}\n                                onChange={handleInputChange}\n                            />\n\n\n\n                            <FormControl>\n                                <FormLabel component=\"legend\">Parents` Marital Status</FormLabel>\n                                <RadioGroup row name=\"gender\" value={values.mStatus} onChange={handleInputChange}>\n                                    <FormControlLabel value=\"neverMarried\" control={<Radio />} label=\"Never Married\" />\n                                    <FormControlLabel value=\"married\" control={<Radio />} label=\"Married\" />\n                                    <FormControlLabel value=\"separated\" control={<Radio />} label=\"Separated\" />\n                                    <FormControlLabel value=\"divorced\" control={<Radio />} label=\"Divorced\" />\n                                    <FormControlLabel value=\"widow\" control={<Radio />} label=\"Widow\" />\n                                </RadioGroup>\n                            </FormControl>\n\n                            <TextField\n                                variant=\"outlined\"\n                                label=\"Father First & Last Names\"\n                                name=\"fatherFirstAndLastNames\"\n                                value={values.fatherFirstAndLastNames}\n                                onChange={handleInputChange}\n                            />\n\n                            <TextField\n                                variant=\"outlined\"\n                                label=\"Fathers` Age\"\n                                name=\"fAge\"\n                                value={values.fAge}\n                                onChange={handleInputChange}\n                            />\n\n                            <TextField\n                                variant=\"outlined\"\n                                label=\"Fathers` Address\"\n                                name=\"fAddress\"\n                                value={values.fAddress}\n                                onChange={handleInputChange}\n                            />\n\n\n                            <TextField\n                                variant=\"outlined\"\n                                label=\"Fathers` Phone\"\n                                name=\"fPhone\"\n                                value={values.fPhone}\n                                onChange={handleInputChange}\n                            />\n\n                            <TextField\n                                variant=\"outlined\"\n                                label=\"Fathers` Occupation (if retired, provide the last occupation before retirement and how many years into retirement)\"\n                                name=\"fOccupation\"\n                                value={values.fOccupation}\n                                onChange={handleInputChange}\n                            />\n\n\n                            <TextField\n                                variant=\"outlined\"\n                                label=\"Fathers` Employer Name\"\n                                name=\"fEmpName\"\n                                value={values.fEmpName}\n                                onChange={handleInputChange}\n                            />\n\n                            <TextField\n                                variant=\"outlined\"\n                                label=\"Fathers` Employer Address\"\n                                name=\"fEmpAddress\"\n                                value={values.fEmpAddress}\n                                onChange={handleInputChange}\n                            />\n\n                            <TextField\n                                variant=\"outlined\"\n                                label=\"Mothers` First & Last Names\"\n                                name=\"motherFirstAndLastNames\"\n                                value={values.motherFirstAndLastNames}\n                                onChange={handleInputChange}\n                            />\n\n                            <TextField\n                                variant=\"outlined\"\n                                label=\"Mothers` Age\"\n                                name=\"mAge\"\n                                value={values.mAge}\n                                onChange={handleInputChange}\n                            />\n\n                            <TextField\n                                variant=\"outlined\"\n                                label=\"Mothers` Address\"\n                                name=\"mAddress\"\n                                value={values.mAddress}\n                                onChange={handleInputChange}\n                            />\n\n\n                            <TextField\n                                variant=\"outlined\"\n                                label=\"Mothers` Phone\"\n                                name=\"mPhone\"\n                                value={values.mPhone}\n                                onChange={handleInputChange}\n                            />\n\n                            <TextField\n                                variant=\"outlined\"\n                                label=\"Mothers` Occupation (if retired, provide the last occupation before retirement and how many years into retirement)\"\n                                name=\"mOccupation\"\n                                value={values.mOccupation}\n                                onChange={handleInputChange}\n                            />\n\n\n                            <TextField\n                                variant=\"outlined\"\n                                label=\"Mothers` Employer Name\"\n                                name=\"mEmpName\"\n                                value={values.mEmpName}\n                                onChange={handleInputChange}\n                            />\n\n                            <TextField\n                                variant=\"outlined\"\n                                label=\"Mothers` Employer Address\"\n                                name=\"mEmpAddress\"\n                                value={values.mEmpAddress}\n                                onChange={handleInputChange}\n                            />\n\n\n                            <FormControl>\n                                <FormLabel component=\"legend\">Annual Budget Esimation</FormLabel>\n\n                                <TableContainer component={Paper}>\n                                    <Table className={classes.table} aria-label=\"simple table\">\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell>Expenses</TableCell>\n                                                <TableCell>Amount</TableCell>\n\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            <TableRow >\n                                                <TableCell component=\"th\" scope=\"row\">\n                                                    Tution\n                                                </TableCell>\n                                                <TableCell>\n                                                    <TextField\n                                                        variant=\"outlined\"\n                                                        name=\"tution\"\n                                                        value={values.tution}\n                                                        onChange={handleInputChange}\n                                                    />\n                                                </TableCell>\n                                            </TableRow>\n                                            <TableRow >\n                                                <TableCell component=\"th\" scope=\"row\">\n                                                    Books\n                                                </TableCell>\n                                                <TableCell>\n                                                    <TextField\n                                                        variant=\"outlined\"\n                                                        name=\"books\"\n                                                        value={values.books}\n                                                        onChange={handleInputChange}\n                                                    />\n                                                </TableCell>\n                                            </TableRow>\n                                            <TableRow >\n                                                <TableCell component=\"th\" scope=\"row\">\n                                                    School Furniture\n                                                </TableCell>\n                                                <TableCell>\n                                                    <TextField\n                                                        variant=\"outlined\"\n                                                        name=\"schoolFur\"\n                                                        value={values.schoolFur}\n                                                        onChange={handleInputChange}\n                                                    />\n                                                </TableCell>\n                                            </TableRow>\n                                            <TableRow >\n                                                <TableCell component=\"th\" scope=\"row\">\n                                                    Transportation\n                                                </TableCell>\n                                                <TableCell>\n                                                    <TextField\n                                                        variant=\"outlined\"\n                                                        name=\"transportation\"\n                                                        value={values.transportation}\n                                                        onChange={handleInputChange}\n                                                    />\n                                                </TableCell>\n                                            </TableRow>\n                                            <TableRow >\n                                                <TableCell component=\"th\" scope=\"row\">\n                                                    Clothing\n                                                </TableCell>\n                                                <TableCell>\n                                                    <TextField\n                                                        variant=\"outlined\"\n                                                        name=\"clothing\"\n                                                        value={values.clothing}\n                                                        onChange={handleInputChange}\n                                                    />\n                                                </TableCell>\n                                            </TableRow>\n                                            <TableRow >\n                                                <TableCell component=\"th\" scope=\"row\">\n                                                    Recreation\n                                                </TableCell>\n                                                <TableCell>\n                                                    <TextField\n                                                        variant=\"outlined\"\n                                                        name=\"recreation\"\n                                                        value={values.recreation}\n                                                        onChange={handleInputChange}\n                                                    />\n                                                </TableCell>\n                                            </TableRow>\n\n                                            <TableRow >\n                                                <TableCell component=\"th\" scope=\"row\">\n                                                    Others\n                                                </TableCell>\n                                                <TableCell>\n                                                    <TextField\n                                                        variant=\"outlined\"\n                                                        name=\"others\"\n                                                        value={values.others}\n                                                        onChange={handleInputChange}\n                                                    />\n                                                </TableCell>\n                                            </TableRow>\n\n                                            <TableRow >\n                                                <TableCell component=\"th\" scope=\"row\">\n                                                    Total Expenses\n                                                </TableCell>\n                                                <TableCell>\n                                                    <TextField\n                                                        variant=\"outlined\"\n                                                        name=\"totalExpenses\"\n                                                        value={values.totalExpenses}\n                                                        onChange={handleInputChange}\n                                                    />\n                                                </TableCell>\n                                            </TableRow>\n\n\n                                        </TableBody>\n                                    </Table>\n\n\n                                    <Table className={classes.table} aria-label=\"simple table\">\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell>Revenue Sources</TableCell>\n                                                <TableCell>Amount</TableCell>\n\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            <TableRow >\n                                                <TableCell component=\"th\" scope=\"row\">\n                                                Parents support\n                                                </TableCell>\n                                                <TableCell>\n                                                    <TextField\n                                                        variant=\"outlined\"\n                                                        name=\"pSupport\"\n                                                        value={values.pSupport}\n                                                        onChange={handleInputChange}\n                                                    />\n                                                </TableCell>\n                                            </TableRow>\n                                            <TableRow >\n                                                <TableCell component=\"th\" scope=\"row\">\n                                                    Loan\n                                                </TableCell>\n                                                <TableCell>\n                                                    <TextField\n                                                        variant=\"outlined\"\n                                                        name=\"loan\"\n                                                        value={values.loan}\n                                                        onChange={handleInputChange}\n                                                    />\n                                                </TableCell>\n                                            </TableRow>\n                                            <TableRow >\n                                                <TableCell component=\"th\" scope=\"row\">\n                                                    School Break Activities\n                                                </TableCell>\n                                                <TableCell>\n                                                    <TextField\n                                                        variant=\"outlined\"\n                                                        name=\"sBreakActs\"\n                                                        value={values.sBreakActs}\n                                                        onChange={handleInputChange}\n                                                    />\n                                                </TableCell>\n                                            </TableRow>\n                                            <TableRow >\n                                                <TableCell component=\"th\" scope=\"row\">\n                                                    Friends Support\n                                                </TableCell>\n                                                <TableCell>\n                                                    <TextField\n                                                        variant=\"outlined\"\n                                                        name=\"friendSupport\"\n                                                        value={values.friendSupport}\n                                                        onChange={handleInputChange}\n                                                    />\n                                                </TableCell>\n                                            </TableRow>\n\n                                            <TableRow >\n                                                <TableCell component=\"th\" scope=\"row\">\n                                                    Other Sources\n                                                </TableCell>\n                                                <TableCell>\n                                                    <TextField\n                                                        variant=\"outlined\"\n                                                        name=\"otherSources\"\n                                                        value={values.otherSources}\n                                                        onChange={handleInputChange}\n                                                    />\n                                                </TableCell>\n                                            </TableRow>\n\n                                            <TableRow >\n                                                <TableCell component=\"th\" scope=\"row\">\n                                                    Total Revenues\n                                                </TableCell>\n                                                <TableCell>\n                                                    <TextField\n                                                        variant=\"outlined\"\n                                                        name=\"totalRevenues\"\n                                                        value={values.totalRevenues}\n                                                        onChange={handleInputChange}\n                                                    />\n                                                </TableCell>\n                                            </TableRow>\n\n                                        </TableBody>\n                                    </Table>\n\n                                </TableContainer>\n                            </FormControl>\n\n\n                        </Grid>\n                        <div className=\"register-submit\">\n                            <button className=\"submit-btn\">Submit</button>\n                            <button className=\"reset-btn\">Reset</button>\n                        </div>\n                    </Grid>\n                </form>\n            </div>\n\n        </div>\n    );\n}\n\n","/Users/ashishbaraskar/solar-pv-web/src/components/Dashboard/Dashboard.tsx",[],"/Users/ashishbaraskar/solar-pv-web/src/components/ClientForm/ClientForm.tsx",[],"/Users/ashishbaraskar/solar-pv-web/src/components/ProductForm/ProductForm.tsx",[],"/Users/ashishbaraskar/solar-pv-web/src/components/LocationForm/LocationForm.tsx",[],"/Users/ashishbaraskar/solar-pv-web/src/components/CertificateForm/CertificateForm.tsx",["172","173","174","175","176","177","178","179"],"import { FormControl, Grid, InputLabel, MenuItem, Select, TextField, makeStyles, FormLabel, RadioGroup, FormControlLabel, Radio } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport './CertificateForm.css'\n\nconst initialValues = {\n    certificateId: '',\n    certificateNumber: '',\n    location: '',\n    reportNumber: '',\n    contactId: '',\n    testStandardId: '',\n    productId: '',\n    certIssueDate: ''\n}\n\n\nconst useStyle = makeStyles(theme => ({\n    root: {\n        '& .MuiTextField-root, & .MuiFormGroup-root, & .MuiFormLabel-root, & .MuiInputBase-root, & .MuiFormControl-root': {\n            width: '90%',\n            margin: theme.spacing(1)\n        }\n    },\n    button: {\n        backgroundColor: 'green',\n        color: 'white',\n        fontWeight: 'bold'\n    },\n    table: {\n        '& .MuiTextField-root, & .MuiFormGroup-root, & .MuiFormLabel-root, & .MuiInputBase-root, & .MuiFormControl-root': {\n            width: '100%',\n            minWidth: '70px',\n            margin: 0\n        }\n\n    },\n\n}))\n\ninterface IDonationProps {\n\n}\n\nexport default function CertificateForm(props: IDonationProps) {\n\n\n    const [values, setValues] = useState(initialValues)\n    const classes = useStyle()\n\n    const handleInputChange = (event: any) => {\n        const { name, value } = event.target;\n        setValues({\n            ...values,\n            [name]: value\n        })\n    }\n\n    const handleSubmit = (event: { preventDefault: () => void; }) => {\n        event.preventDefault()\n\n    }\n\n\n    return (\n        <div className=\"donation-div\">\n            <div className=\"reg-header\"><span className=\"reg-header-title\">Certificate Form</span></div>\n            <div className=\"reg-form donation-form\">\n                <form className={classes.root} onSubmit={handleSubmit}>\n                    <Grid container>\n                        <Grid>\n                            <TextField\n                                variant=\"outlined\"\n                                label=\"Certificate ID\"\n                                value={values.certificateId}\n                                name=\"certificateId\"\n                                onChange={handleInputChange}\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                label=\"Certificate Number\"\n                                name=\"certificateNumber\"\n                                value={values.certificateNumber}\n                                onChange={handleInputChange}\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                label=\"Location\"\n                                name=\"location\"\n                                value={values.location}\n                                onChange={handleInputChange}\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                label=\"Report Number\"\n                                name=\"reportNumber\"\n                                value={values.reportNumber}\n                                onChange={handleInputChange}\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                label=\"Contact ID\"\n                                name=\"contactId\"\n                                value={values.contactId}\n                                onChange={handleInputChange}\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                label=\"Test Standard ID\"\n                                name=\"testStandardId\"\n                                value={values.testStandardId}\n                                onChange={handleInputChange}\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                label=\"Test Standard ID\"\n                                name=\"testStandardId\"\n                                value={values.testStandardId}\n                                onChange={handleInputChange}\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                label=\"Product ID\"\n                                name=\"productId\"\n                                value={values.productId}\n                                onChange={handleInputChange}\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                label=\"Certificate Issue Date\"\n                                name=\"certIssueDate\"\n                                value={values.certIssueDate}\n                                onChange={handleInputChange}\n                            />\n                        </Grid>\n                        <div className=\"register-submit\">\n                            <button className=\"submit-btn\">Submit</button>\n                            <button className=\"reset-btn\">Reset</button>\n                        </div>\n                    </Grid>\n                </form>\n            </div>\n        </div>\n    );\n}\n\n","/Users/ashishbaraskar/solar-pv-web/src/components/TestStandardForm/TestStandardForm.tsx",[],"/Users/ashishbaraskar/solar-pv-web/src/store/certificates/reducer.tsx",[],"/Users/ashishbaraskar/solar-pv-web/src/store/certificates/constants.tsx",[],{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":26},{"ruleId":"184","severity":1,"message":"188","line":1,"column":10,"nodeType":"186","messageId":"187","endLine":1,"endColumn":20},{"ruleId":"184","severity":1,"message":"189","line":1,"column":22,"nodeType":"186","messageId":"187","endLine":1,"endColumn":27},{"ruleId":"184","severity":1,"message":"185","line":2,"column":17,"nodeType":"186","messageId":"187","endLine":2,"endColumn":26},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"180","replacedBy":"190"},{"ruleId":"182","replacedBy":"191"},{"ruleId":"180","replacedBy":"190"},{"ruleId":"182","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":15,"column":69,"nodeType":"186","messageId":"187","endLine":15,"endColumn":74},{"ruleId":"192","severity":1,"message":"194","line":1,"column":130,"nodeType":"186","messageId":"187","endLine":1,"endColumn":135},{"ruleId":"184","severity":1,"message":"195","line":1,"column":10,"nodeType":"186","messageId":"187","endLine":1,"endColumn":21},{"ruleId":"184","severity":1,"message":"196","line":1,"column":29,"nodeType":"186","messageId":"187","endLine":1,"endColumn":39},{"ruleId":"184","severity":1,"message":"197","line":1,"column":41,"nodeType":"186","messageId":"187","endLine":1,"endColumn":49},{"ruleId":"184","severity":1,"message":"198","line":1,"column":51,"nodeType":"186","messageId":"187","endLine":1,"endColumn":57},{"ruleId":"184","severity":1,"message":"199","line":1,"column":82,"nodeType":"186","messageId":"187","endLine":1,"endColumn":91},{"ruleId":"184","severity":1,"message":"200","line":1,"column":93,"nodeType":"186","messageId":"187","endLine":1,"endColumn":103},{"ruleId":"184","severity":1,"message":"201","line":1,"column":105,"nodeType":"186","messageId":"187","endLine":1,"endColumn":121},{"ruleId":"184","severity":1,"message":"202","line":1,"column":123,"nodeType":"186","messageId":"187","endLine":1,"endColumn":128},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],"@typescript-eslint/no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'makeStyles' is defined but never used.","'Paper' is defined but never used.",["203"],["204"],"no-unused-vars","'Theme' is defined but never used.","'Input' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'FormLabel' is defined but never used.","'RadioGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'Radio' is defined but never used.","no-global-assign","no-unsafe-negation"]